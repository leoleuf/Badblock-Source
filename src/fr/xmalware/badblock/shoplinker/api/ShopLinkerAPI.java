package fr.xmalware.badblock.shoplinker.api;

import fr.badblock.rabbitconnector.RabbitService;
import fr.xmalware.badblock.shoplinker.plugin.listeners.ReceiveShopDataListener;
import lombok.Data;

@Data
public class ShopLinkerAPI {
	
	private RabbitService	rabbitService;
	
	// CONSTRUCTOR
	public ShopLinkerAPI(RabbitService rabbitService) {
		this.setRabbitService(rabbitService);
	}
	
	// PUBLIC
	public void setRank(String serverName, String playerName, String rankName) {
		sendShopData(serverName, buildShopData(playerName, rankName));
	}

	// PRIVATE
	private void sendShopData(ShopTrame shopTrame) {
		rabbitService.sendPacket(buildQueueName(shopTrame), buildPacketData(shopTrame), ShopLinkerSettings.PACKET_ENCODAGE, ShopLinkerSettings.PACKET_TYPE, ShopLinkerSettings.TTL, ShopLinkerSettings.DEBUG);
	}

	private  void sendShopData(String serverName, ShopData shopData) {
		sendShopData(buildDataDestination(serverName), shopData);
	}
	
	private String buildQueueName(ShopTrame shopTrame) {
		return ShopLinkerSettings.QUEUE_PREFIX + shopTrame.getShopDataDestination().getQueueName();
	}
	
	private String buildPacketData(ShopTrame shopTrame) {
		return ReceiveShopDataListener.getGson().toJson(shopTrame.getShopData());
	}
	private ShopDataDestination buildDataDestination(String serverName) {
		return new ShopDataDestination(serverName);
	}
	
	private ShopData buildShopData(String playerName, String rankName) {
		return new ShopData(playerName, rankName);
	}
	
	private ShopTrame buildShopTrame(ShopDataDestination shopDataDestination, ShopData shopData) {
		return new ShopTrame(shopData, shopDataDestination);
	}
	
	private void sendShopData(ShopDataDestination shopDataDestination, ShopData shopData) {
		sendShopData(buildShopTrame(shopDataDestination, shopData));
	}

}
